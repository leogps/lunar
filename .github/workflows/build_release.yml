name: Build and Release Go Project

on:
  push:
    branches:
      - '**'    # Triggers on every push to any branch, including tags
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Build binaries for all platforms
        run: make build-all

      - name: Upload release binaries
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: ./bin/*

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Build binaries for all platforms
        run: make build-release

      - name: Extract Tag Name
        id: extract_tag
        run: echo "TAG_NAME=$(basename ${{ github.ref }})" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.TAG_NAME }}-${{ github.run_number }}
          release_name: Release ${{ env.TAG_NAME }}-${{ github.run_number }} Executables
          draft: false
          prerelease: false

      - name: Upload binaries to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for file in ./bin/*.tar.gz ./bin/*.zip ./bin/*.sha256; do
            # Upload each matching file
            echo "Uploading $file"
          
            curl -f -L -X POST \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              --data-binary "$file" \
              "${{ steps.create_release.outputs.upload_url }}=$(basename $file)"
          done